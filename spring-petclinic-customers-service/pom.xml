<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework.samples.petclinic.client</groupId>
    <artifactId>spring-petclinic-customers-service</artifactId>
    <packaging>jar</packaging>
    <description>Spring PetClinic Customers Service</description>
    <version>2.1.4</version>

    <!--<parent>-->
        <!--<groupId>org.springframework.samples</groupId>-->
        <!--<artifactId>spring-petclinic-microservices</artifactId>-->
        <!--<version>2.1.4</version>-->
    <!--</parent>-->

    <properties>
        <docker.image.exposed.port>8081</docker.image.exposed.port>
        <docker.image.dockerfile.dir>${basedir}/../docker</docker.image.dockerfile.dir>

            <java.version>1.8</java.version>
            <assertj.version>3.11.1</assertj.version>

            <spring-boot.version>2.1.2.RELEASE</spring-boot.version>
            <spring-cloud.version>Greenwich.SR1</spring-cloud.version>

            <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>

            <docker.image.prefix>springcommunity</docker.image.prefix>
            <docker.image.exposed.port>9090</docker.image.exposed.port>
            <docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
            <docker.image.dockerize.version>v0.6.1</docker.image.dockerize.version>
            <docker.plugin.version>1.2.0</docker.plugin.version>

            <!--<quarkus.version>1.0.0.CR1</quarkus.version>-->
            <quarkus.version>1.0.0.CR1</quarkus.version>
            <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
            <maven.compiler.source>1.8</maven.compiler.source>
            <maven.compiler.target>1.8</maven.compiler.target>

            <assertj.version>3.11.1</assertj.version>

            <surefire-plugin.version>2.22.1</surefire-plugin.version>
            <compiler-plugin.version>3.8.0</compiler-plugin.version>
            <docker-plugin.version>0.28.0</docker-plugin.version>

            <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>

            <docker.image.prefix>quarkuscommunity</docker.image.prefix>
            <docker.image.exposed.port>9090</docker.image.exposed.port>
            <docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
            <docker.image.dockerize.version>v0.6.1</docker.image.dockerize.version>
            <docker.plugin.version>1.2.0</docker.plugin.version>
    </properties>

    <dependencyManagement>
    <dependencies>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-universe-bom</artifactId>
            <version>1.0.0.CR1</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-mysql</artifactId>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-spring-web</artifactId>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-spring-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!-- the parameters=true option is critical so that RESTEasy works fine -->
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <!-- you need this specific version to integrate with the other build helpers -->
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemProperties>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <!-- This is what injects the magic Quarkus bytecode -->
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--
            <plugin>
                &lt;!&ndash; Automatically start PostgreSQL for integration testing - requires Docker &ndash;&gt;
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-plugin.version}</version>
                <configuration>
                    <skip>${skipTests}</skip>
                    <images>
                        <image>
                            <name>postgres:10.5</name>
                            <alias>postgresql</alias>
                            <run>
                                <env>
                                    <POSTGRES_USER>petclinic</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>petclinic</POSTGRES_PASSWORD>
                                    <POSTGRES_DB>petclinic_customers</POSTGRES_DB>
                                </env>
                                <ports>
                                    <port>5432:5432</port>
                                </ports>
                                <log>
                                    <prefix>PostgreSQL:</prefix>
                                    <date>default</date>
                                    <color>cyan</color>
                                </log>
                                <wait>
                                    <tcp>
                                        <mode>mapped</mode>
                                        <ports>
                                            <port>5432</port>
                                        </ports>
                                    </tcp>
                                    <time>10000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-start</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>docker-stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
-->
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${surefire-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <native.image.path>
                                            ${project.build.directory}/${project.build.finalName}-runner
                                        </native.image.path>
                                    </systemProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
        </profile>
    </profiles>
</project>
