<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.quarkus.samples</groupId>
    <artifactId>quarkus-petclinic-microservices</artifactId>
    <version>2.1.4</version>
    <name>${project.artifactId}</name>
    <packaging>pom</packaging>


    <properties>
        <!--<quarkus.version>0.26.1</quarkus.version>-->
        <quarkus.version>999-SNAPSHOT</quarkus.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>


        <java.version>1.8</java.version>
        <assertj.version>3.11.1</assertj.version>

        <quarkus-boot.version>2.1.2.RELEASE</quarkus-boot.version>
        <quarkus-cloud.version>Greenwich.SR1</quarkus-cloud.version>

        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>

        <docker.image.prefix>quarkuscommunity</docker.image.prefix>
        <docker.image.exposed.port>9090</docker.image.exposed.port>
        <docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
        <docker.image.dockerize.version>v0.6.1</docker.image.dockerize.version>
        <docker.plugin.version>1.2.0</docker.plugin.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <modules>
        <!--<module>quarkus-petclinic-admin-server</module>-->
        <!--<module>quarkus-petclinic-customers-service</module>-->
        <module>quarkus-petclinic-vets-service</module>
        <!--<module>quarkus-petclinic-visits-service</module>-->
        <!--<module>quarkus-petclinic-config-server</module>-->
        <!--<module>quarkus-petclinic-discovery-server</module>-->
        <!--<module>quarkus-petclinic-api-gateway</module>-->
        <!--<module>quarkus-petclinic-hystrix-dashboard</module>-->
    </modules>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus.cloud</groupId>
                <artifactId>quarkus-cloud-dependencies</artifactId>
                <version>${quarkus-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.quarkus.boot</groupId>
                <artifactId>quarkus-boot-starter-test</artifactId>
                <version>${quarkus-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>quarkusboot</id>
            <activation>
                <file>
                    <!-- Just a way to identify a Quarkus Boot application -->
                    <exists>src/main/resources/bootstrap.yml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus.boot</groupId>
                        <artifactId>quarkus-boot-maven-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                        </configuration>
                        <executions>
                            <execution>
                                <!-- Quarkus Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
                                <goals>
                                    <goal>build-info</goal>
                                </goals>
                                <configuration>
                                    <additionalProperties>
                                        <encoding.source>${project.build.sourceEncoding}</encoding.source>
                                        <encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
                                        <java.source>${maven.compiler.source}</java.source>
                                        <java.target>${maven.compiler.target}</java.target>
                                    </additionalProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Quarkus Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <verbose>true</verbose>
                            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                            </generateGitPropertiesFilename>
                            <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>

        <profile>
            <id>buildDocker</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>${docker.plugin.version}</version>
                            <executions>
                                <execution>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                                <dockerDirectory>${docker.image.dockerfile.dir}</dockerDirectory>
                                <serverId>docker-hub</serverId>
                                <registryUrl>https://index.docker.io/v1/</registryUrl>
                                <resources>
                                    <resource>
                                        <targetPath>/</targetPath>
                                        <directory>${project.build.directory}</directory>
                                        <include>${project.build.finalName}.jar</include>
                                    </resource>
                                </resources>
                                <buildArgs>
                                    <ARTIFACT_NAME>${project.build.finalName}</ARTIFACT_NAME>
                                    <EXPOSED_PORT>${docker.image.exposed.port}</EXPOSED_PORT>
                                    <DOCKERIZE_VERSION>${docker.image.dockerize.version}</DOCKERIZE_VERSION>
                                </buildArgs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>repository.quarkus.milestone</id>
            <name>Quarkus Milestone Repository</name>
            <url>http://repo.quarkus.io/milestone</url>
        </repository>
    </repositories>

</project>
